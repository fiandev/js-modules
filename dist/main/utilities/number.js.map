{"version":3,"file":"number.js","names":["arrayNumbers","start","end","c","Number","end_SAFE_INTEGER","getType","typeErrorException","invalidValueException","concat","LIMIT","integers","maxValueException","value","push"],"sources":["../../../src/utilities/number.js"],"sourcesContent":["import { getType } from \"./dataType.js\";\nimport {\n  typeErrorException,\n  invalidValueException,\n  maxValueException,\n} from \"./exceptions.js\";\n\n/**\n * @function arrayNumbers\n * function to randomize item in the array\n * @param {number} start - the start number of iteration\n * @param {nunber} end - the end number of iteration\n * @returns {any} random item on items\n */\nexport function arrayNumbers(start, end) {\n  if (getType(start) !== \"number\") throw typeErrorException(start, \"number\");\n  if (getType(end) !== \"number\") throw typeErrorException(end, \"number\");\n  if (end < start) throw invalidValueException(`${end} < ${start}`);\n\n  const LIMIT = end > Number.end_SAFE_INTEGER ? Number.end_SAFE_INTEGER : end;\n  let integers = [];\n\n  if (end > LIMIT) throw maxValueException(end, LIMIT);\n\n  for (let value = start; value < end; value++) {\n    integers.push(value);\n  }\n\n  return integers;\n}\n"],"mappings":"oLAcO,QAAS,CAAAA,YAAYA,CAACC,CAAK,CAAEC,CAAG,CAAE,KAAAC,CAAA,CAKnBC,MAAM,CAACC,gBAAgB,CAJ3C,GAAuB,QAAQ,GAA3B,GAAAC,iBAAO,EAACL,CAAK,CAAc,CAAE,KAAM,GAAAM,8BAAkB,EAACN,CAAK,CAAE,QAAQ,CAAC,CAC1E,GAAqB,QAAQ,GAAzB,GAAAK,iBAAO,EAACJ,CAAG,CAAc,CAAE,KAAM,GAAAK,8BAAkB,EAACL,CAAG,CAAE,QAAQ,CAAC,CACtE,GAAIA,CAAG,CAAGD,CAAK,CAAE,KAAM,GAAAO,iCAAqB,KAAAC,MAAA,CAAIP,CAAG,QAAAO,MAAA,CAAMR,CAAK,CAAE,CAAC,CAAC,GAE5D,CAAAS,CAAK,CAAGR,CAAG,CAAAC,CAA0B,CAAAA,CAAA,CAA6BD,CAAG,CACvES,CAAQ,CAAG,EAAE,CAEjB,GAAIT,CAAG,CAAGQ,CAAK,CAAE,KAAM,GAAAE,6BAAiB,EAACV,CAAG,CAAEQ,CAAK,CAAC,CAEpD,IAAK,GAAI,CAAAG,CAAK,CAAGZ,CAAK,CAAEY,CAAK,CAAGX,CAAG,CAAEW,CAAK,EAAE,CAC1CF,CAAQ,CAACG,IAAI,CAACD,CAAK,CAAC,CAGtB,MAAO,CAAAF,CACT"}