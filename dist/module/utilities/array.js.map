{"version":3,"file":"array.js","names":["getType","isUndefined","isArray","typeErrorException","invalidValueException","stringToArray","str","splitter","arr","split","arrayToString","except","toString","replace","inArray","needle","haystack","i","length","countArrayDimention","array","counter","item","splitArray","numberOfParts","isInteger","partLength","Math","ceil","resultParts","start","end","push","slice"],"sources":["../../../src/utilities/array.js"],"sourcesContent":["import { getType, isUndefined, isArray } from \"./dataType.js\";\nimport { typeErrorException, invalidValueException } from \"./exceptions.js\";\n\n/**\n * @function stringToArray\n * function to split string to array\n * @param {string} str - string to split\n * @param {string} [splitter=] splitter - character to split the string to array\n * @returns {any} random item on items\n */\nexport function stringToArray(str, splitter = \"\") {\n  if (getType(str) !== \"string\") throw typeErrorException(arr, \"string\");\n  if (getType(splitter) !== \"string\") throw typeErrorException(arr, \"string\");\n  return str.split(splitter);\n}\n\n/**\n * @function arrayToString\n * function to transform array to string\n * @param {Array} arr - array to transform\n * @returns {string} string of result\n */\nexport function arrayToString(arr) {\n  if (getType(except) !== \"array\") throw typeErrorException(arr, \"array\");\n\n  return arr.toString().replace(/\\,/g, \"\");\n}\n\n/**\n * @function inArray\n * function to check item is contained in the array\n * @param {any} needle - anything to be contained in the array\n * @param {Array} haystack - the array with included items\n * @returns {boolean}\n */\nexport function inArray(needle, haystack) {\n  if (\n    (!isUndefined(needle) && isUndefined(haystack)) ||\n    (!isUndefined(haystack) && !isArray(haystack))\n  )\n    throw typeErrorException(haystack, \"array\");\n\n  for (let i = 0; i < haystack.length; i++) {\n    if (haystack[i] === needle) return true;\n  }\n\n  return false;\n}\n\n/**\n * @function countArrayDimention\n * function to check dimension of the array\n * @param {Array} array - the array whose dimension will be counted\n * @returns {number} total dimension of the array\n */\nexport function countArrayDimention(array) {\n  if (!isArray(array)) throw typeErrorException(array, \"array\");\n\n  let counter = array.length;\n\n  for (let item of array) {\n    counter += isArray(item) ? countArrayDimention(item) : 0;\n  }\n\n  return counter;\n}\n\n/**\n * @function splitArray\n * function to split an array into several parts\n * @param {Array} array - atray whole will be splitted\n * @param {number} numberOfParts - number of parts\n * @returns {Array} splitted array\n */\nexport function splitArray(array, numberOfParts = 1) {\n  if (!isArray(array)) throw typeErrorException(array, \"array\");\n  if (!isInteger(numberOfParts))\n    throw typeErrorException(numberOfParts, \"number|integer\");\n  if (numberOfParts <= 0) throw `the numberOfParts must be greater than 0`;\n\n  const partLength = Math.ceil(array.length / numberOfParts);\n  const resultParts = [];\n\n  for (let i = 0; i < numberOfParts; i++) {\n    const start = i * partLength;\n    const end = (i + 1) * partLength;\n    resultParts.push(array.slice(start, end));\n  }\n\n  return resultParts;\n}\n"],"mappings":"AAAA,OAASA,OAAO,CAAEC,WAAW,CAAEC,OAAO,KAAQ,eAAe,CAC7D,OAASC,kBAAkB,CAAEC,qBAAqB,KAAQ,iBAAiB,CAS3E,MAAO,SAAS,CAAAC,aAAaA,CAACC,CAAG,CAAEC,CAAQ,CAAG,EAAE,CAAE,CAChD,GAAqB,QAAQ,GAAzBP,OAAO,CAACM,CAAG,CAAc,CAAE,KAAM,CAAAH,kBAAkB,CAACK,GAAG,CAAE,QAAQ,CAAC,CACtE,GAA0B,QAAQ,GAA9BR,OAAO,CAACO,CAAQ,CAAc,CAAE,KAAM,CAAAJ,kBAAkB,CAACK,GAAG,CAAE,QAAQ,CAAC,CAC3E,MAAO,CAAAF,CAAG,CAACG,KAAK,CAACF,CAAQ,CAC3B,CAQA,MAAO,SAAS,CAAAG,aAAaA,CAACF,CAAG,CAAE,CACjC,GAAwB,OAAO,GAA3BR,OAAO,CAACW,MAAM,CAAa,CAAE,KAAM,CAAAR,kBAAkB,CAACK,CAAG,CAAE,OAAO,CAAC,CAEvE,MAAO,CAAAA,CAAG,CAACI,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,CAAE,EAAE,CACzC,CASA,MAAO,SAAS,CAAAC,OAAOA,CAACC,CAAM,CAAEC,CAAQ,CAAE,CACxC,GACG,CAACf,WAAW,CAACc,CAAM,CAAC,EAAId,WAAW,CAACe,CAAQ,CAAC,EAC7C,CAACf,WAAW,CAACe,CAAQ,CAAC,EAAI,CAACd,OAAO,CAACc,CAAQ,CAAE,CAE9C,KAAM,CAAAb,kBAAkB,CAACa,CAAQ,CAAE,OAAO,CAAC,CAE7C,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,CAAQ,CAACE,MAAM,CAAED,CAAC,EAAE,CACtC,GAAID,CAAQ,CAACC,CAAC,CAAC,GAAKF,CAAM,CAAE,SAG9B,QACF,CAQA,MAAO,SAAS,CAAAI,mBAAmBA,CAACC,CAAK,CAAE,CACzC,GAAI,CAAClB,OAAO,CAACkB,CAAK,CAAC,CAAE,KAAM,CAAAjB,kBAAkB,CAACiB,CAAK,CAAE,OAAO,CAAC,CAE7D,GAAI,CAAAC,CAAO,CAAGD,CAAK,CAACF,MAAM,CAE1B,IAAK,GAAI,CAAAI,CAAI,GAAI,CAAAF,CAAK,CACpBC,CAAO,EAAInB,OAAO,CAACoB,CAAI,CAAC,CAAGH,mBAAmB,CAACG,CAAI,CAAC,CAAG,CAAC,CAG1D,MAAO,CAAAD,CACT,CASA,MAAO,SAAS,CAAAE,UAAUA,CAACH,CAAK,CAAEI,CAAa,CAAG,CAAC,CAAE,CACnD,GAAI,CAACtB,OAAO,CAACkB,CAAK,CAAC,CAAE,KAAM,CAAAjB,kBAAkB,CAACiB,CAAK,CAAE,OAAO,CAAC,CAC7D,GAAI,CAACK,SAAS,CAACD,CAAa,CAAC,CAC3B,KAAM,CAAArB,kBAAkB,CAACqB,CAAa,CAAE,gBAAgB,CAAC,CAC3D,GAAqB,CAAC,EAAlBA,CAAkB,CAAE,KAAO,0CAAyC,CAAC,KAEnE,CAAAE,CAAU,CAAGC,IAAI,CAACC,IAAI,CAACR,CAAK,CAACF,MAAM,CAAGM,CAAa,CAAC,CACpDK,CAAW,CAAG,EAAE,CAEtB,IAAK,GAAI,CAAAZ,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGO,CAAa,CAAEP,CAAC,EAAE,CAAE,MAChC,CAAAa,CAAK,CAAGb,CAAC,CAAGS,CAAU,CACtBK,CAAG,CAAG,CAACd,CAAC,CAAG,CAAC,EAAIS,CAAU,CAChCG,CAAW,CAACG,IAAI,CAACZ,CAAK,CAACa,KAAK,CAACH,CAAK,CAAEC,CAAG,CAAC,CAC1C,CAEA,MAAO,CAAAF,CACT"}