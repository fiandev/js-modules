{"version":3,"file":"array.js","names":["getType","isUndefined","isArray","typeErrorException","invalidValueException","stringToArray","str","splitter","arr","split","arrayToString","except","toString","replace","inArray","needle","haystack","i","length","countArrayDimention","array","counter","item","splitArray","numberOfParts","isInteger","partLength","Math","ceil","resultParts","start","end","push","slice"],"sources":["../../../src/utilities/array.js"],"sourcesContent":["import { getType, isUndefined, isArray } from \"./dataType.js\"; \nimport { typeErrorException, invalidValueException } from \"./exceptions.js\";\n\n/**\n * @function stringToArray\n * function to split string to array\n * @param {string} str - string to split\n * @param {string} [splitter=] splitter - character to split the string to array\n * @returns {any} random item on items\n */\nexport function stringToArray (str, splitter = \"\") {\n  if (getType(str) !== \"string\") throw typeErrorException(arr, \"string\");\n  if (getType(splitter) !== \"string\") throw typeErrorException(arr, \"string\");\n  return str.split(splitter);\n}\n\n/**\n * @function arrayToString\n * function to transform array to string\n * @param {Array} arr - array to transform\n * @returns {string} string of result\n */\nexport function arrayToString (arr) {\n  if (getType(except) !== \"array\") throw typeErrorException(arr, \"array\");\n  \n  return arr.toString().replace(/\\,/g, \"\");\n}\n\n/**\n * @function inArray\n * function to check item is contained in the array\n * @param {any} needle - anything to be contained in the array\n * @param {Array} haystack - the array with included items\n * @returns {boolean}\n */\nexport function inArray(needle, haystack) {\n  if ((!isUndefined(needle) && isUndefined(haystack)) || (!isUndefined(haystack) && !isArray(haystack))) throw typeErrorException(haystack, \"array\");\n  \n  for(let i = 0; i < haystack.length; i++) {\n    if(haystack[i] === needle) return true;\n  }\n  \n  return false;\n}\n\n/**\n * @function countArrayDimention\n * function to check dimension of the array\n * @param {Array} array - the array whose dimension will be counted\n * @returns {number} total dimension of the array\n */\nexport function countArrayDimention (array) {\n  if (!isArray(array)) throw typeErrorException(array, \"array\");\n  \n  let counter = array.length;\n  \n  for (let item of array) {\n    counter += isArray(item) ? countArrayDimention(item) : 0;\n  }\n  \n  return counter;\n}\n\n/**\n * @function splitArray\n * function to split an array into several parts\n * @param {Array} array - atray whole will be splitted\n * @param {number} numberOfParts - number of parts\n * @returns {Array} splitted array\n */\nexport function splitArray(array, numberOfParts = 1) {\n  if (!isArray(array)) throw typeErrorException(array, \"array\");\n  if (!isInteger(numberOfParts)) throw typeErrorException(numberOfParts, \"number|integer\");\n  if (numberOfParts <= 0) throw `the numberOfParts must be greater than 0`;\n  \n  const partLength = Math.ceil(array.length / numberOfParts);\n  const resultParts = [];\n  \n  for (let i = 0; i < numberOfParts; i++) {\n    const start = i * partLength;\n    const end = (i + 1) * partLength;\n    resultParts.push(array.slice(start, end));\n  }\n\n  return resultParts;\n}"],"mappings":"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"}