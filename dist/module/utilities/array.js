import{getType,isUndefined,isArray}from"./dataType.js";import{typeErrorException,invalidValueException}from"./exceptions.js";export function stringToArray(a,b=""){if("string"!==getType(a))throw typeErrorException(arr,"string");if("string"!==getType(b))throw typeErrorException(arr,"string");return a.split(b)}export function arrayToString(a){if("array"!==getType(except))throw typeErrorException(a,"array");return a.toString().replace(/\,/g,"")}export function inArray(a,b){if(!isUndefined(a)&&isUndefined(b)||!isUndefined(b)&&!isArray(b))throw typeErrorException(b,"array");for(let c=0;c<b.length;c++)if(b[c]===a)return!0;return!1}export function countArrayDimention(a){if(!isArray(a))throw typeErrorException(a,"array");let b=a.length;for(let c of a)b+=isArray(c)?countArrayDimention(c):0;return b}export function splitArray(a,b=1){if(!isArray(a))throw typeErrorException(a,"array");if(!isInteger(b))throw typeErrorException(b,"number|integer");if(0>=b)throw`the numberOfParts must be greater than 0`;const c=Math.ceil(a.length/b),d=[];for(let e=0;e<b;e++){const b=e*c,f=(e+1)*c;d.push(a.slice(b,f))}return d}