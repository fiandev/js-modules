{"version":3,"file":"string.js","names":["getType","typeErrorException","clearNecessarySpaceOnBacktick","str","Error","lines","split","result","line","trimStart","alphabets","except","exceptions","i","charCodeAt","character","String","fromCharCode","includes"],"sources":["../../../src/utilities/string.js"],"sourcesContent":["import { getType } from \"./dataType.js\";\nimport { typeErrorException } from \"./exceptions.js\";\n\n/**\n * @function clearNecessarySpaceOnBacktick\n * function to clear necessary space on multiline backtick string\n * @param {string} str - string to clear their space\n * @returns {string} clear string after trimed\n */\nexport function clearNecessarySpaceOnBacktick (str) {\n  if (getType(str) !== \"string\") throw new Error (`parameter str must be typeof string, ${ getType(str) } given`);\n  \n  let lines = str.split(\"\\n\");\n  let result = \"\";\n  \n  for (let line of lines) {\n    result += `${ line.trimStart() }\\n`;\n  }\n  return result;\n}\n\n/**\n * @function alphabets\n * function to generate alphabets\n * @param {Object} options - options to customize returned alphabets\n * @param {(string|string[])} options.except - exception characters\n * @returns {string} string of alphabets\n */\nexport function alphabets ({ except }) {\n  if (getType(except) !== \"string\" || getType(except) !== \"array\") throw typeErrorException(except, \"string | array\");\n  \n  let result = \"\";\n  let exceptions = [];\n  \n  if (getType(except) === \"string\") exceptions = except.split(\"\");\n  else exceptions = except;\n  \n  for (let i = 'a'.charCodeAt(0); i <= 'z'.charCodeAt(0); i++) {\n    let character = String.fromCharCode(i);\n    \n    if (!exceptions.includes(character)) result += character;\n  }\n  \n  return result;\n}\n\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,kBAAkB,QAAQ,iBAAiB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,6BAA6BA,CAAEC,GAAG,EAAE;EAClD,IAAIH,OAAO,CAACG,GAAG,CAAC,KAAK,QAAQ,EAAE,MAAM,IAAIC,KAAK,CAAG,wCAAwCJ,OAAO,CAACG,GAAG,CAAG,QAAO,CAAC;EAE/G,IAAIE,KAAK,GAAGF,GAAG,CAACG,KAAK,CAAC,IAAI,CAAC;EAC3B,IAAIC,MAAM,GAAG,EAAE;EAEf,KAAK,IAAIC,IAAI,IAAIH,KAAK,EAAE;IACtBE,MAAM,IAAK,GAAGC,IAAI,CAACC,SAAS,CAAC,CAAG,IAAG;EACrC;EACA,OAAOF,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,SAASA,CAAE;EAAEC;AAAO,CAAC,EAAE;EACrC,IAAIX,OAAO,CAACW,MAAM,CAAC,KAAK,QAAQ,IAAIX,OAAO,CAACW,MAAM,CAAC,KAAK,OAAO,EAAE,MAAMV,kBAAkB,CAACU,MAAM,EAAE,gBAAgB,CAAC;EAEnH,IAAIJ,MAAM,GAAG,EAAE;EACf,IAAIK,UAAU,GAAG,EAAE;EAEnB,IAAIZ,OAAO,CAACW,MAAM,CAAC,KAAK,QAAQ,EAAEC,UAAU,GAAGD,MAAM,CAACL,KAAK,CAAC,EAAE,CAAC,CAAC,KAC3DM,UAAU,GAAGD,MAAM;EAExB,KAAK,IAAIE,CAAC,GAAG,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC,EAAED,CAAC,IAAI,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;IAC3D,IAAIE,SAAS,GAAGC,MAAM,CAACC,YAAY,CAACJ,CAAC,CAAC;IAEtC,IAAI,CAACD,UAAU,CAACM,QAAQ,CAACH,SAAS,CAAC,EAAER,MAAM,IAAIQ,SAAS;EAC1D;EAEA,OAAOR,MAAM;AACf"}