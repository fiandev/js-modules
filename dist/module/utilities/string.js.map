{"version":3,"file":"string.js","names":["getType","typeErrorException","clearNecessarySpaceOnBacktick","str","Error","lines","split","result","line","trimStart","alphabets","except","b","String","fromCharCode","exceptions","character","i","includes"],"sources":["../../../src/utilities/string.js"],"sourcesContent":["import { getType } from \"./dataType.js\";\nimport { typeErrorException } from \"./exceptions.js\";\n\n/**\n * @function clearNecessarySpaceOnBacktick\n * function to clear necessary space on multiline backtick string\n * @param {string} str - string to clear their space\n * @returns {string} clear string after trimed\n */\nexport function clearNecessarySpaceOnBacktick(str) {\n  if (getType(str) !== \"string\")\n    throw new Error(\n      `parameter str must be typeof string, ${getType(str)} given`,\n    );\n\n  let lines = str.split(\"\\n\");\n  let result = \"\";\n\n  for (let line of lines) {\n    result += `${line.trimStart()}\\n`;\n  }\n  return result;\n}\n\n/**\n * @function alphabets\n * function to generate alphabets\n * @param {Object} options - options to customize returned alphabets\n * @param {(string|string[])} options.except - exception characters\n * @returns {string} string of alphabets\n */\nexport function alphabets({ except }) {\n  if (getType(except) !== \"string\" || getType(except) !== \"array\")\n    throw typeErrorException(except, \"string | array\");\n\n  let result = \"\";\n  let exceptions = [];\n\n  if (getType(except) === \"string\") exceptions = except.split(\"\");\n  else exceptions = except;\n\n  for (let i = \"a\".charCodeAt(0); i <= \"z\".charCodeAt(0); i++) {\n    let character = String.fromCharCode(i);\n\n    if (!exceptions.includes(character)) result += character;\n  }\n\n  return result;\n}\n"],"mappings":"AAAA,OAASA,OAAO,KAAQ,eAAe,CACvC,OAASC,kBAAkB,KAAQ,iBAAiB,CAQpD,MAAO,SAAS,CAAAC,6BAA6BA,CAACC,CAAG,CAAE,CACjD,GAAqB,QAAQ,GAAzBH,OAAO,CAACG,CAAG,CAAc,CAC3B,KAAM,IAAI,CAAAC,KAAK,CACZ,wCAAuCJ,OAAO,CAACG,CAAG,CAAE,QACvD,CAAC,CAAC,GAEA,CAAAE,CAAK,CAAGF,CAAG,CAACG,KAAK,CAAC,IAAI,CAAC,CACvBC,CAAM,CAAG,EAAE,CAEf,IAAK,GAAI,CAAAC,CAAI,GAAI,CAAAH,CAAK,CACpBE,CAAM,EAAK,GAAEC,CAAI,CAACC,SAAS,CAAC,CAAE,IAAG,CAEnC,MAAO,CAAAF,CACT,CASA,MAAO,SAAS,CAAAG,SAASA,CAAC,CAAEC,MAAM,CAANA,CAAO,CAAC,CAAE,KAAAC,CAAA,CAWlBC,MAAM,CAACC,YAAY,CAVrC,GAAwB,QAAQ,GAA5Bd,OAAO,CAACW,CAAM,CAAc,EAAwB,OAAO,GAA3BX,OAAO,CAACW,CAAM,CAAa,CAC7D,KAAM,CAAAV,kBAAkB,CAACU,CAAM,CAAE,gBAAgB,CAAC,CAAC,GAEjD,CAAAJ,CAAM,CAAG,EAAE,CACXQ,CAAU,CAAG,EAAE,CAEeA,CAAU,CAApB,QAAQ,GAA5Bf,OAAO,CAACW,CAAM,CAAc,CAAeA,CAAM,CAACL,KAAK,CAAC,EAAE,CAAC,CAC7CK,CAAM,CAExB,IAAK,GACC,CAAAK,CAAS,CADNC,CAAC,GAAoB,CAAEA,CAAC,KAAqB,CAAEA,CAAC,EAAE,CACrDD,CAAS,CAAGJ,CAAA,CAAoBK,CAAC,CAAC,CAEjCF,CAAU,CAACG,QAAQ,CAACF,CAAS,CAAC,GAAET,CAAM,EAAIS,CAAS,EAG1D,MAAO,CAAAT,CACT"}