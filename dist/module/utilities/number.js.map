{"version":3,"file":"number.js","names":["getType","typeErrorException","invalidValueException","maxValueException","arrayNumbers","start","end","c","Number","end_SAFE_INTEGER","LIMIT","integers","value","push"],"sources":["../../../src/utilities/number.js"],"sourcesContent":["import { getType } from \"./dataType.js\";\nimport {\n  typeErrorException,\n  invalidValueException,\n  maxValueException,\n} from \"./exceptions.js\";\n\n/**\n * @function arrayNumbers\n * function to randomize item in the array\n * @param {number} start - the start number of iteration\n * @param {nunber} end - the end number of iteration\n * @returns {any} random item on items\n */\nexport function arrayNumbers(start, end) {\n  if (getType(start) !== \"number\") throw typeErrorException(start, \"number\");\n  if (getType(end) !== \"number\") throw typeErrorException(end, \"number\");\n  if (end < start) throw invalidValueException(`${end} < ${start}`);\n\n  const LIMIT = end > Number.end_SAFE_INTEGER ? Number.end_SAFE_INTEGER : end;\n  let integers = [];\n\n  if (end > LIMIT) throw maxValueException(end, LIMIT);\n\n  for (let value = start; value < end; value++) {\n    integers.push(value);\n  }\n\n  return integers;\n}\n"],"mappings":"AAAA,OAASA,OAAO,KAAQ,eAAe,CACvC,OACEC,kBAAkB,CAClBC,qBAAqB,CACrBC,iBAAiB,KACZ,iBAAiB,CASxB,MAAO,SAAS,CAAAC,YAAYA,CAACC,CAAK,CAAEC,CAAG,CAAE,KAAAC,CAAA,CAKnBC,MAAM,CAACC,gBAAgB,CAJ3C,GAAuB,QAAQ,GAA3BT,OAAO,CAACK,CAAK,CAAc,CAAE,KAAM,CAAAJ,kBAAkB,CAACI,CAAK,CAAE,QAAQ,CAAC,CAC1E,GAAqB,QAAQ,GAAzBL,OAAO,CAACM,CAAG,CAAc,CAAE,KAAM,CAAAL,kBAAkB,CAACK,CAAG,CAAE,QAAQ,CAAC,CACtE,GAAIA,CAAG,CAAGD,CAAK,CAAE,KAAM,CAAAH,qBAAqB,CAAE,GAAEI,CAAI,MAAKD,CAAM,EAAC,CAAC,CAEjE,KAAM,CAAAK,CAAK,CAAGJ,CAAG,CAAAC,CAA0B,CAAAA,CAAA,CAA6BD,CAAG,CAC3E,GAAI,CAAAK,CAAQ,CAAG,EAAE,CAEjB,GAAIL,CAAG,CAAGI,CAAK,CAAE,KAAM,CAAAP,iBAAiB,CAACG,CAAG,CAAEI,CAAK,CAAC,CAEpD,IAAK,GAAI,CAAAE,CAAK,CAAGP,CAAK,CAAEO,CAAK,CAAGN,CAAG,CAAEM,CAAK,EAAE,CAC1CD,CAAQ,CAACE,IAAI,CAACD,CAAK,CAAC,CAGtB,MAAO,CAAAD,CACT"}