{"version":3,"file":"number.js","names":["getType","typeErrorException","invalidValueException","maxValueException","arrayNumbers","start","end","LIMIT","Number","end_SAFE_INTEGER","integers","value","push"],"sources":["../../../src/utilities/number.js"],"sourcesContent":["import { getType } from \"./dataType.js\";\nimport { typeErrorException, invalidValueException, maxValueException } from \"./exceptions.js\";\n\n/**\n * @function arrayNumbers\n * function to randomize item in the array\n * @param {number} start - the start number of iteration\n * @param {nunber} end - the end number of iteration\n * @returns {any} random item on items\n */\nexport function arrayNumbers (start, end) {\n  if (getType(start) !== \"number\") throw typeErrorException(start, \"number\");\n  if (getType(end) !== \"number\") throw typeErrorException(end, \"number\");\n  if (end < start) throw invalidValueException(`${ end } < ${ start }`);\n  \n  const LIMIT = end > Number.end_SAFE_INTEGER ? Number.end_SAFE_INTEGER : end;\n  let integers = [];\n  \n  if (end > LIMIT) throw maxValueException(end, LIMIT);\n  \n  for (let value = start; value < end; value++) {\n    integers.push(value);\n  }\n  \n  return integers;\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,kBAAkB,EAAEC,qBAAqB,EAAEC,iBAAiB,QAAQ,iBAAiB;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAEC,KAAK,EAAEC,GAAG,EAAE;EACxC,IAAIN,OAAO,CAACK,KAAK,CAAC,KAAK,QAAQ,EAAE,MAAMJ,kBAAkB,CAACI,KAAK,EAAE,QAAQ,CAAC;EAC1E,IAAIL,OAAO,CAACM,GAAG,CAAC,KAAK,QAAQ,EAAE,MAAML,kBAAkB,CAACK,GAAG,EAAE,QAAQ,CAAC;EACtE,IAAIA,GAAG,GAAGD,KAAK,EAAE,MAAMH,qBAAqB,CAAE,GAAGI,GAAK,MAAMD,KAAO,EAAC,CAAC;EAErE,MAAME,KAAK,GAAGD,GAAG,GAAGE,MAAM,CAACC,gBAAgB,GAAGD,MAAM,CAACC,gBAAgB,GAAGH,GAAG;EAC3E,IAAII,QAAQ,GAAG,EAAE;EAEjB,IAAIJ,GAAG,GAAGC,KAAK,EAAE,MAAMJ,iBAAiB,CAACG,GAAG,EAAEC,KAAK,CAAC;EAEpD,KAAK,IAAII,KAAK,GAAGN,KAAK,EAAEM,KAAK,GAAGL,GAAG,EAAEK,KAAK,EAAE,EAAE;IAC5CD,QAAQ,CAACE,IAAI,CAACD,KAAK,CAAC;EACtB;EAEA,OAAOD,QAAQ;AACjB"}